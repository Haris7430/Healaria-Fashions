
<%- include("../../views/partials/user/header/") %>

<style>
	.product-offer-badge {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: #ff0000;
    color: white;
    padding: 5px 10px;
    border-radius: 3px;
    font-weight: bold;
}

.product-image-container {
    position: relative;
    overflow: hidden;
}
</style>



<style>
	/* Update your existing wishlist button styles */
	
	
	
	.add-to-wishlist .wishlist-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background-color 0.3s ease;
    background: #828bb3;
    margin: 0 auto;
}

.add-to-wishlist .fa-heart {
    color: white !important;
}

.add-to-wishlist.in-wishlist .wishlist-icon {
    background-color: #ff0000;
}

/* Add animation for wishlist toggle */
@keyframes heartPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
}

.add-to-wishlist.in-wishlist .fa-heart {
    animation: heartPulse 0.3s ease;
}
	
	
		</style>
	
		
	<!-- card modal styles -->
	<style>
	
		
	
		/* Add these styles to make the modal more compact */
	.product-modal .modal-dialog {
		max-width: 350px; /* Reduced width */
	}
	
	.product-modal .modal-header {
		padding: 0.75rem;
		background: #384aeb;
		border-bottom: none;
	}
	
	.product-modal .modal-body {
		padding: 0;
	}
	
	.product-modal .product-carousel {
		max-height: 200px; /* Reduced height */
	}
	
	.product-modal .carousel-inner img {
		height: 150px; /* Reduced height */
		object-fit: contain;
	}
	
	.product-modal .product-info {
		padding: 1rem !important; 
	}
	
	/* Improved thumbnail styling */
	.carousel-thumbnails {
		padding: 0.25rem;
		gap: 0.25rem;
		background: #f8f9fa;
	}
	
	.carousel-thumbnail {
		width: 30px; 
		height: 30px;
		border-radius: 4px;
		cursor: pointer;
		transition: all 0.3s ease;
	}
	
	/* Improved size selection */
	.size-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(45px, 1fr));
		gap: 0.5rem;
		padding: 0.75rem;
	}
	
	.size-box {
		height: 35px;
		display: flex;
		align-items: center;
		justify-content: center;
		border: 1px solid #dee2e6;
		border-radius: 4px;
		cursor: pointer;
		transition: all 0.2s ease;
		font-size: 0.9rem;
	}
	
	.size-box.selected {
		background: #384aeb;
		color: white;
		border-color: #384aeb;
	}
	
	/* Price section styling */
	.price-section {
		padding: 0.75rem;
		background: #f8f9fa;
		border-radius: 4px;
		margin: 0.75rem;
	}
	
	.offer-price {
		font-size: 1.25rem;
		font-weight: 600;
		color: #384aeb;
	}
	
	.regular-price {
		text-decoration: line-through;
		color: #6c757d;
		font-size: 0.9rem;
	}
	
	/* Footer styling */
	.modal-footer {
		padding: 0.75rem;
		border-top: none;
		justify-content: space-between;
	}
	
	.btn-add-cart {
		background: #384aeb;
		color: white;
		border-radius: 25px;
		padding: 0.5rem 1.5rem;
		transition: all 0.3s ease;
	}
	
	.btn-add-cart:hover {
		background: #2a3eb1;
		transform: translateY(-1px);
	}
		</style>
	


	<style>
		.single-related-product {
			margin-bottom: 20px;
			padding: 10px;
			border-radius: 8px;
			transition: all 0.3s ease;
		}
		
		.single-related-product:hover {
			background: #f8f9fa;
			transform: translateY(-2px);
		}
		
		.single-related-product img {
			border-radius: 6px;
			margin-right: 15px;
		}
		
		.single-related-product .desc {
			flex: 1;
		}
		
		.single-related-product .title {
			color: #222;
			font-size: 16px;
			margin-bottom: 5px;
			display: block;
			text-decoration: none;
		}
		
		.single-related-product .price {
			display: flex;
			align-items: center;
			flex-wrap: wrap;
			gap: 8px;
		}
		
		.single-related-product .price h6 {
			margin: 0;
			font-size: 15px;
		}
		
		.single-related-product .l-through {
			text-decoration: line-through;
			color: #777;
		}
		
		.badge-danger {
			background: #ff2335;
			padding: 4px 8px;
			font-size: 12px;
		}
		</style>

		
	<!-- start banner Area -->
	<section class="banner-area">
		<div class="container">
			<div class="row fullscreen align-items-center justify-content-start">
				<div class="col-lg-12">
					
						<!-- single-slide -->
						<div class="row single-slide align-items-center d-flex">
							<div class="col-lg-5 col-md-6">
								<div class="banner-content">
									<h1>Nike New <br>Collection!</h1>
									<p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et
										dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation.</p>
										
										<div class="add-bag d-flex align-items-center">
											<% if (isBannerProductValid) { %>
												<a class="add-btn add-to-cart" href="#" data-product-id="675be838bfffab0a9c0db5da">
													<span class="lnr lnr-cross"></span>
												</a>
												<span class="add-text text-uppercase">Add to Cart</span>
											<% } else { %>
												<div class="text-danger">This product is currently unavailable</div>
											<% } %>
										</div>
								</div>
							</div>
							<div class="col-lg-7">
								<div class="banner-img">
									<a href="/productDetails?id=675be838bfffab0a9c0db5da">
										<img class="img-fluid" src="img/banner/banner-img.png" alt="">
									</a>
								</div>
							</div>
						</div>
						<!-- single-slide -->
						
					
				</div>
			</div>
		</div>
	</section>
	<!-- End banner Area -->

	<!-- start features Area -->
	<section class="features-area section_gap">
		<div class="container">
			<div class="row features-inner">
				<!-- single features -->
				<div class="col-lg-3 col-md-6 col-sm-6">
					<div class="single-features">
						<div class="f-icon">
							<img src="img/features/f-icon1.png" alt="">
						</div>
						<h6>Free Delivery</h6>
						<p>Free Shipping on all order</p>
					</div>
				</div>
				<!-- single features -->
				<div class="col-lg-3 col-md-6 col-sm-6">
					<div class="single-features">
						<div class="f-icon">
							<img src="img/features/f-icon2.png" alt="">
						</div>
						<h6>Return Policy</h6>
						<p>Free Shipping on all order</p>
					</div>
				</div>
				<!-- single features -->
				<div class="col-lg-3 col-md-6 col-sm-6">
					<div class="single-features">
						<div class="f-icon">
							<img src="img/features/f-icon3.png" alt="">
						</div>
						<h6>24/7 Support</h6>
						<p>Free Shipping on all order</p>
					</div>
				</div>
				<!-- single features -->
				<div class="col-lg-3 col-md-6 col-sm-6">
					<div class="single-features">
						<div class="f-icon">
							<img src="img/features/f-icon4.png" alt="">
						</div>
						<h6>Secure Payment</h6>
						<p>Free Shipping on all order</p>
					</div>
				</div>
			</div>
		</div>
	</section>
	<!-- end features Area -->

<!-- Start category Area -->
<section class="category-area">
    <div class="container">
        <h1 class="row justify-content-center">TOP CATEGORIES</h1>
		
        <div class="row justify-content-center">
            <div class="col-lg-11 col-md-12">
                <div class="row">
                    <!-- First Category - Large Column -->
                    <% if (topCategories && topCategories.length > 0) { %>
                        <div class="col-lg-8 col-md-8">
                            <div class="single-deal">
                                <div class="overlay"></div>
                                <img class="img-fluid w-100" src="img/category/c1.jpg" alt="<%= topCategories[0].name %>">
                                <a href="/category/<%= topCategories[0]._id %>">
                                    <div class="deal-details">
                                        <h6 class="deal-title"><%= topCategories[0].name %></h6>
                                    </div>
                                </a>
                            </div>
                        </div>
                    <% } %>
                    
                    <!-- Second Category - Small Column -->
                    <% if (topCategories && topCategories.length > 1) { %>
                        <div class="col-lg-4 col-md-4">
                            <div class="single-deal">
                                <div class="overlay"></div>
                                <img class="img-fluid w-100" src="img/category/c2.jpg" alt="<%= topCategories[1].name %>">
                                <a href="/category/<%= topCategories[1]._id %>">
                                    <div class="deal-details">
                                        <h6 class="deal-title"><%= topCategories[1].name %></h6>
                                    </div>
                                </a>
                            </div>
                        </div>
                    <% } %>
                    
                    <!-- Third Category - Small Column -->
                    <% if (topCategories && topCategories.length > 2) { %>
                        <div class="col-lg-4 col-md-4">
                            <div class="single-deal">
                                <div class="overlay"></div>
                                <img class="img-fluid w-100" src="img/category/c3.jpg" alt="<%= topCategories[2].name %>">
                                <a href="/category/<%= topCategories[2]._id %>">
                                    <div class="deal-details">
                                        <h6 class="deal-title"><%= topCategories[2].name %></h6>
                                    </div>
                                </a>
                            </div>
                        </div>
                    <% } %>
                    
                    <!-- Fourth Category - Large Column -->
                    <% if (topCategories && topCategories.length > 3) { %>
                        <div class="col-lg-8 col-md-8">
                            <div class="single-deal">
                                <div class="overlay"></div>
                                <img class="img-fluid w-100" src="img/category/c4.jpg" alt="<%= topCategories[3].name %>">
                                <a href="/category/<%= topCategories[3]._id %>">
                                    <div class="deal-details">
                                        <h6 class="deal-title"><%= topCategories[3].name %></h6>
                                    </div>
                                </a>
                            </div>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End category Area -->

	<!-- start product Area -->
	<section class="owl-carousel active-product-area section_gap">
		<!-- single product slide -->
		<div class="single-product-slider">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-6 text-center">
                    <div class="section-title">
                        <h1>Latest Products</h1>
                        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et
                            dolore
                            magna aliqua.</p>
                    </div>
                </div>
            </div>

            <div class="row">
				<% products.forEach(product => { %>
				<div class="col-lg-3 col-md-6">
					<div class="single-product">
						<a href="/productDetails?id=<%= product._id %>">
							<div class="product-image-container">
								<% if (product.variants && product.variants.length > 0 && product.variants[0].images && product.variants[0].images.length > 0) { %>
									<img class="img-fluid" src="/uploads/product-images/<%= product.variants[0].images[0].filename %>" alt="<%= product.productName %>">
								<% } else { %>
									<img class="img-fluid" src="/uploads/placeholder.jpg" alt="No Image">
								<% } %>
			
								<% if (product.maxOfferPercentage && product.maxOfferPercentage > 0) { %>
									<div class="product-offer-badge">
										<%= product.maxOfferPercentage %>% OFF
									</div>
								<% } %>
							</div>
						</a>
			
						<div class="product-details">
							<h6><%= product.productName.length > 21 ? product.productName.substring(0, 21) + '...' : product.productName %></h6>							<div class="price">
								<% const offerPrice = product.regularPrice * (1 - product.maxOfferPercentage / 100); %>
								<% if (offerPrice < product.regularPrice) { %>
									<h6>₹ <%= Math.round(offerPrice) %></h6>
									<h6 class="l-through text-muted">₹ <%= product.regularPrice %></h6>
								<% } else { %>
									<h6>₹ <%= product.regularPrice %></h6>
								<% } %>
							</div>
							<div class="prd-bottom">
								<a href="#" class="social-info add-to-cart" data-product-id="<%= product._id %>">
									<span class="ti-bag"></span>
									<p class="hover-text">add to cart</p>
								</a>
								<a href="#" class="social-info add-to-wishlist <%= product.isInWishlist ? 'in-wishlist' : '' %>" 
								   data-product-id="<%= product._id %>">
									<span class="wishlist-icon">
										<i class="fa fa-heart" style="color: '<%= product.isInWishlist ? 'rgb(255, 0, 0)' : '#828bb3' %>'"></i>
									</span>
									<p class="hover-text">Wishlist</p>
								</a>
							</div>
						</div>
					</div>
				</div>
				<% }); %>
			</div>
        </div>
    </div>
		
		<!-- single product slide -->
		<div class="single-product-slider">
			<div class="container">
				<div class="row justify-content-center">
					<div class="col-lg-6 text-center">
						<div class="section-title">
							<h1>Top Sellings</h1>
							<p>Our most popular products based on sales</p>
						</div>
					</div>
				</div>
				<div class="row">
					<% topSellingProducts.forEach(product => { %>
						<div class="col-lg-3 col-md-6">
							<div class="single-product">
								<a href="/productDetails?id=<%= product._id %>">
									<div class="product-image-container">
										<% if (product.variants && product.variants.length > 0 && product.variants[0].images && product.variants[0].images.length > 0) { %>
											<img class="img-fluid" src="/uploads/product-images/<%= product.variants[0].images[0].filename %>" alt="<%= product.productName %>">
										<% } else { %>
											<img class="img-fluid" src="/uploads/placeholder.jpg" alt="No Image">
										<% } %>
										
										<% if (product.maxOfferPercentage > 0) { %>
											<div class="product-offer-badge">
												<%= product.maxOfferPercentage %>% OFF
											</div>
										<% } %>
									</div>
								</a>
								
								<div class="product-details">
									<h6><%= product.productName.length > 21 ? product.productName.substring(0, 21) + '...' : product.productName %></h6>									<div class="price">
										<% if (product.offerPrice) { %>
											<h6>₹<%= product.offerPrice %></h6>
											<h6 class="l-through">₹<%= product.regularPrice %></h6>
										<% } else { %>
											<h6>₹<%= product.regularPrice %></h6>
										<% } %>
									</div>
									<div class="prd-bottom">
										<% if (locals.user) { %>
											<a href="#" class="social-info add-to-cart" data-product-id="<%= product._id %>">
												<span class="ti-bag"></span>
												<p class="hover-text">add to cart</p>
											</a>
											<a href="#" class="social-info add-to-wishlist" 
   data-product-id="<%= product._id %>">
    <span class="wishlist-icon">
        <i class="fa fa-heart"></i>
    </span>
    <p class="hover-text">Wishlist</p>
</a>
										<% } else { %>
											<a href="/login" class="social-info">
												<span class="ti-bag"></span>
												<p class="hover-text">Login to add</p>
											</a>
										<% } %>
									</div>
								</div>
							</div>
						</div>
					<% }); %>
				</div>
			</div>
		</div>
		
	</section>


	<!-- add To Cart modal -->
	<div class="modal fade product-modal" id="addToCartModal" tabindex="-1">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header bg-primary text-white">
					<h5 class="modal-title">
						<i class="fa fa-shopping-cart mr-2"></i>
						Add to Cart
					</h5>
					<button type="button" class="close text-white" data-dismiss="modal">&times;</button>
				</div>
				<div class="modal-body p-0">
					<!-- Product Image Carousel with Thumbnails -->
					<div class="product-carousel">
						<div id="productImageCarousel" class="carousel slide" data-ride="carousel">
							<div class="carousel-inner" id="carouselInner">
								<!-- Images dynamically added here -->
							</div>
							<a class="carousel-control-prev" href="#productImageCarousel" role="button" data-slide="prev">
								<span class="carousel-control-prev-icon"></span>
							</a>
							<a class="carousel-control-next" href="#productImageCarousel" role="button" data-slide="next">
								<span class="carousel-control-next-icon"></span>
							</a>
							<!-- Thumbnails -->
							<div class="carousel-thumbnails mt-3 d-flex justify-content-center">
								<!-- Thumbnails dynamically added here -->
							</div>
						</div>
					</div>
	
					<!-- Product Details Section -->
					<div class="product-info p-4">
						<h4 id="modalProductName" class="product-name mb-2"></h4>
						<p id="modalProductCategory" class="product-category text-muted"></p>
	
						<!-- Price Section with Animation -->
						<div class="price-section mb-4">
							<div class="d-flex align-items-center">
								<span id="modalOfferPrice" class="offer-price mr-3"></span>
								<span id="modalRegularPrice" class="regular-price mr-3"></span>
								<span id="modalDiscountBadge" class="discount-badge animate-pulse"></span>
							</div>
						</div>
	
						<!-- Size Selection with Visual Feedback -->
						<div class="size-section mb-4">
							<h6 class="size-title d-flex justify-content-between">
								<span>Select Size</span>
								<small class="text-primary">Size Guide</small>
							</h6>
							<div id="modalSizeBoxes" class="size-grid">
								<!-- Size boxes dynamically added here -->
							</div>
							<small id="sizeError" class="size-error text-danger mt-2" style="display: none;">
								<i class="fa fa-exclamation-circle mr-1"></i>
								Please select a size to continue
							</small>
						</div>
	
						<!-- Stock Status -->
						<div class="stock-status mb-3">
							<i class="fa fa-check-circle text-success mr-2"></i>
							<span>In Stock</span>
						</div>
	
						<!-- Product Link -->
						<a href="#" id="viewDetailsLink" class="btn btn-link text-primary w-100" data-product-id="">
							<i class="fa fa-external-link mr-1"></i>
							View Full Details   
						</a>
					</div>
				</div>
	
				<!-- Modal Footer with Enhanced Buttons -->
				<div class="modal-footer border-0 px-4 pb-4">
					<button type="button" class="btn btn-light" data-dismiss="modal">
						<i class="fa fa-times mr-1"></i>
						Close
					</button>
					<button type="button" class="btn btn-primary" id="confirmAddToCart" disabled>
						<i class="fa fa-shopping-cart mr-1"></i>
						Add to Cart
					</button>
				</div>
			</div>
		</div>
	</div>

	<!-- end product Area -->

	<!-- Start exclusive deal Area -->
	<section class="exclusive-deal-area">
		<div class="container-fluid">
			<div class="row justify-content-center align-items-center">
				<% if (exclusiveDeals && exclusiveDeals.length > 0) { 
					const topDeal = exclusiveDeals[0]; %>
					<div class="col-lg-6 no-padding exclusive-left">
						<div class="row clock_sec clockdiv" id="offerClockdiv" data-expires="<%= topDeal.expiresAt %>">
							<div class="col-lg-12">
								<h1>Exclusive Hot Deal!</h1>
								<p><%= topDeal.offer.offerName %> - <%= topDeal.discount %>% OFF</p>
							</div>
							<div class="col-lg-12">
								<div class="row clock-wrap">
									<div class="col clockinner1 clockinner">
										<h1 class="days">0</h1>
										<span class="smalltext">Days</span>
									</div>
									<div class="col clockinner clockinner1">
										<h1 class="hours">0</h1>
										<span class="smalltext">Hours</span>
									</div>
									<div class="col clockinner clockinner1">
										<h1 class="minutes">0</h1>
										<span class="smalltext">Mins</span>
									</div>
									<div class="col clockinner clockinner1">
										<h1 class="seconds">0</h1>
										<span class="smalltext">Secs</span>
									</div>
								</div>
							</div>
						</div>
						<a href="/shop-page" class="primary-btn">Go To Shop Page</a>
					</div>
					<div class="col-lg-6 no-padding exclusive-right">
						<div class="active-exclusive-product-slider">
							<% exclusiveDeals.forEach(deal => { %>
								<div class="single-exclusive-slider">
									<a href="/productDetails?id=<%= deal.product._id %>">
										<img class="img-fluid" 
											 src="/uploads/product-images/<%= deal.product.variants[0]?.images[0]?.filename || 'default.jpg' %>" 
											 alt="<%= deal.product.productName %>">
									</a>
									<div class="product-details">
										<div class="price">
											<h6>₹<%= deal.offerPrice %></h6>
											<h6 class="l-through">₹<%= deal.product.regularPrice %></h6>
										</div>
										<h4><%= deal.product.productName %></h4>
										<div class="add-bag d-flex align-items-center justify-content-center">
											<a class="add-btn add-to-cart" href="#" data-product-id="<%= deal.product._id %>">
												<span class="ti-bag"></span>
											</a>
											<span class="add-text text-uppercase">Add to Cart</span>
										</div>
									</div>
								</div>
							<% }); %>
						</div>
					</div>
				<% } %>
			</div>
		</div>
	</section>
	<!-- End exclusive deal Area -->


	<!-- Start related-product Area -->
	<section class="related-product-area section_gap_bottom">
		<div class="container">
			<div class="row justify-content-center">
				<div class="col-lg-6 text-center">
					<div class="section-title">
						<br>
						<h1>Deals of the Week</h1>
						<p>Top selling products from our most popular categories</p>
					</div>
				</div>
			</div>
			<div class="row">
				<% if (dealsOfWeek && dealsOfWeek.length > 0) { %>
					<% dealsOfWeek.forEach(category => { %>
						<div class="col-lg-4">
							<h4 class="mb-4"><%= category.category %></h4>
							<% category.products.forEach(product => { %>
								<div class="single-related-product d-flex">
									<a href="/productDetails?id=<%= product._id %>">
										<img src="/uploads/product-images/<%= product.mainImage %>" 
											 alt="<%= product.fullProductName %>"
											 class="img-fluid"
											 style="width: 100px; height: 100px; object-fit: cover;">
									</a>
									<div class="desc">
										<a href="/productDetails?id=<%= product._id %>" 
										   class="title" 
										   title="<%= product.fullProductName %>">
											<%= product.productName %>
										</a>
										<div class="price">
											<% if (product.offerPrice) { %>
												<h6>₹<%= product.offerPrice %></h6>
												<h6 class="l-through">₹<%= product.regularPrice %></h6>
												<span class="badge badge-danger ml-2">
													<%= product.discount %>% OFF
												</span>
											<% } else { %>
												<h6>₹<%= product.regularPrice %></h6>
											<% } %>
										</div>
									</div>
								</div>
							<% }); %>
						</div>
					<% }); %>
				<% } else { %>
					<div class="col-12 text-center">
						<p>No deals available at the moment.</p>
					</div>
				<% } %>
			</div>
		</div>
	</section>
	<!-- End related-product Area -->

	<%- include("../../views/partials/user/footer/") %>


	<!-- This is for my wishlist add botton -->
<script>
	document.addEventListener('DOMContentLoaded', function() {
	  let currentProductDetails = null;
	  let selectedSize = null;
	  const confirmAddToCartBtn = document.getElementById('confirmAddToCart');
  
  
	   // Check authentication status
	   async function checkAuth() {
		  try {
			  const response = await fetch('/check-auth');
			  return response.ok;
		  } catch (error) {
			  return false;
		  }
	  }
	  
  
	  // Show login prompt
	  function showLoginPrompt(action) {
	  return Swal.fire({
		  title: 'Please Login',
		  text: `You need to login to ${action}`,
		  icon: 'info',
		  showCancelButton: true,
		  confirmButtonText: 'Go to Login',
		  cancelButtonText: 'Close',
		  confirmButtonColor: '#384aeb',
		  cancelButtonColor: '#6c757d'
	  }).then((result) => {
		  if (result.isConfirmed) {
			  window.location.href = '/login';
		  }
	  });
  }
  
  
  function handleAuthError(response) {
	  if (response.status === 401) {
		  return response.json().then(data => {
			  return Swal.fire({
				  title: data.title || 'Please Login',
				  text: data.message || 'You need to login to continue',
				  icon: data.type || 'info',
				  showCancelButton: true,
				  confirmButtonText: 'Go to Login',
				  cancelButtonText: 'Close',
				  confirmButtonColor: '#384aeb',
				  cancelButtonColor: '#6c757d'
			  }).then((result) => {
				  if (result.isConfirmed) {
					  window.location.href = '/login';
				  }
				  throw new Error('auth_required');
			  });
		  });
	  }
	  return response;
  }
  
  
  function updateWishlistButton(button, isInWishlist) {
    if (!button) return;
    
    const wishlistIcon = button.querySelector('.wishlist-icon');
    const icon = button.querySelector('.fa-heart');
    
    if (isInWishlist) {
      button.classList.add('in-wishlist');
      wishlistIcon.style.backgroundColor = '#ff0000';
      icon.style.color = 'white';
      button.setAttribute('data-in-wishlist', 'true');
    } else {
      button.classList.remove('in-wishlist');
      wishlistIcon.style.backgroundColor = '#828bb3';
      icon.style.color = 'white';
      button.removeAttribute('data-in-wishlist');
    }
  }
  
  async function initializeWishlistButtons() {
    const isAuthenticated = await checkAuth();
    if (!isAuthenticated) return;

    try {
      // Fetch all wishlist items
      const response = await fetch('/get-wishlist-items');
      if (!response.ok) throw new Error('Failed to fetch wishlist items');
      
      const wishlistItems = await response.json();
      
      // Create a Set of wishlist product IDs for faster lookup
      const wishlistProductIds = new Set(
        wishlistItems.map(item => item.productId)
      );

      // Update all wishlist buttons
      document.querySelectorAll('.add-to-wishlist').forEach(button => {
        const productId = button.dataset.productId;
        const isInWishlist = wishlistProductIds.has(productId);
        updateWishlistButton(button, isInWishlist);
      });

    } catch (error) {
      console.error('Failed to initialize wishlist states:', error);
      
    }
  };
  
	  // Handle wishlist toggle
	  async function handleWishlistToggle(button) {
    try {
      const productId = button.dataset.productId;
      const isInWishlist = button.hasAttribute('data-in-wishlist');
      
      const response = await fetch(
        isInWishlist ? `/remove-from-wishlist/${productId}` : '/add-to-wishlist',
        {
          method: isInWishlist ? 'DELETE' : 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: isInWishlist ? null : JSON.stringify({ 
            productId,
            selectedVariant: null // Add variant if needed
          })
        }
      );

      if (!response.ok) {
        if (response.status === 401) {
          return showLoginPrompt('manage wishlist');
        }
        throw new Error('Failed to update wishlist');
      }

      // Update button state
      updateWishlistButton(button, !isInWishlist);
      
      // Show success message
      Swal.fire({
        icon: 'success',
        title: isInWishlist ? 'Removed from Wishlist' : 'Added to Wishlist',
        toast: true,
        position: 'top-end',
        showConfirmButton: false,
        timer: 2000,
        timerProgressBar: true
      });

    } catch (error) {
      console.error('Wishlist error:', error);
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Failed to update wishlist',
        confirmButtonColor: '#384aeb'
      });
    }
  }
  
	  // Update wishlist button appearance
	  async function updateModalContent(product, variant) {
	  if (!product || !variant) return;
  
	  const modal = document.getElementById('addToCartModal');
	  if (!modal) return;
  
	  // Set current product details
	  currentProductDetails = product;
  
	  // Update view details link
	  const viewDetailsLink = modal.querySelector('#viewDetailsLink');
	  if (viewDetailsLink) {
		  viewDetailsLink.href = `/productDetails?id=${product._id}`;
		  viewDetailsLink.dataset.productId = product._id;
	  }
  
	  // Rest of your existing updateModalContent code...
	  const carouselInner = document.getElementById('carouselInner');
	  const thumbnailContainer = document.querySelector('.carousel-thumbnails');
  
	  if (carouselInner && thumbnailContainer && variant.images) {
		  // Clear existing content
		  carouselInner.innerHTML = '';
		  thumbnailContainer.innerHTML = '';
  
		  // Add images to carousel and create thumbnails
		  variant.images.forEach((image, index) => {
			  // Add to carousel
			  const carouselItem = document.createElement('div');
			  carouselItem.className = `carousel-item ${index === 0 ? 'active' : ''}`;
			  carouselItem.innerHTML = `
				  <img src="/uploads/product-images/${image.filename}" 
					   class="d-block w-100" 
					   alt="${product.productName}">
			  `;
			  carouselInner.appendChild(carouselItem);
  
			  // Create thumbnail
			  const thumbnail = document.createElement('img');
			  thumbnail.src = `/uploads/product-images/${image.filename}`;
			  thumbnail.className = `carousel-thumbnail ${index === 0 ? 'active' : ''}`;
			  thumbnail.dataset.slide = index;
			  thumbnail.addEventListener('click', () => {
				  $('.carousel').carousel(index);
				  document.querySelectorAll('.carousel-thumbnail').forEach(thumb => 
					  thumb.classList.remove('active'));
				  thumbnail.classList.add('active');
			  });
			  thumbnailContainer.appendChild(thumbnail);
		  });
	  }
  
	  // Update product details
	  modal.querySelector('#modalProductName').textContent = product.productName;
	  modal.querySelector('#modalProductCategory').textContent = 
		  product.category ? `Category: ${product.category.name}` : '';
  
	  // Update sizes
	  const sizeBoxesContainer = modal.querySelector('#modalSizeBoxes');
	  if (sizeBoxesContainer && variant.sizes) {
		  sizeBoxesContainer.innerHTML = variant.sizes
			  .filter(size => size.quantity > 0)
			  .map(size => `
				  <div class="size-box" data-size="${size.size}">
					  ${size.size}
				  </div>
			  `).join('');
  
		  // Add size selection handlers
		  sizeBoxesContainer.querySelectorAll('.size-box').forEach(box => {
			  box.addEventListener('click', () => {
				  sizeBoxesContainer.querySelectorAll('.size-box').forEach(b => 
					  b.classList.remove('selected'));
				  box.classList.add('selected');
				  selectedSize = parseInt(box.dataset.size);
				  document.getElementById('sizeError').style.display = 'none';
				  document.getElementById('confirmAddToCart').disabled = false;
			  });
		  });
	  }
  
	  // Fetch and update offers
	  try {
		  const offersResponse = await fetch(`/product/${product._id}/offers`);
		  const offersData = await offersResponse.json();
		  
		  const regularPrice = product.regularPrice;
		  let finalPrice = regularPrice;
		  let maxDiscount = 0;
		  
		  if (offersData?.offers) {
			  maxDiscount = Math.max(...offersData.offers.map(o => o.discount));
			  if (maxDiscount > 0) {
				  finalPrice = regularPrice * (1 - maxDiscount / 100);
			  }
		  }
  
		  modal.querySelector('#modalOfferPrice').textContent = 
			  maxDiscount > 0 ? `₹${Math.round(finalPrice)}` : `₹${regularPrice}`;
		  
		  const regularPriceElement = modal.querySelector('#modalRegularPrice');
		  regularPriceElement.textContent = `₹${regularPrice}`;
		  regularPriceElement.style.display = maxDiscount > 0 ? 'inline' : 'none';
  
		  const discountBadge = modal.querySelector('#modalDiscountBadge');
		  discountBadge.textContent = `${maxDiscount}% OFF`;
		  discountBadge.style.display = maxDiscount > 0 ? 'inline' : 'none';
	  } catch (error) {
		  console.error('Error updating offers:', error);
	  }
  
	  // Reset size selection
	  selectedSize = null;
	  document.getElementById('confirmAddToCart').disabled = true;
  }
  
	 
	  // Add to cart handler
	  document.querySelectorAll('.add-to-cart').forEach(button => {
	  button.addEventListener('click', async function(e) {
		  e.preventDefault();
		  
		  // Check authentication first
		  const isAuthenticated = await checkAuth();
		  if (!isAuthenticated) {
			  return Swal.fire({
				  title: 'Please Login',
				  text: 'You need to login to add items to cart',
				  icon: 'info',
				  showCancelButton: true,
				  confirmButtonText: 'Go to Login',
				  cancelButtonText: 'Close',
				  confirmButtonColor: '#384aeb',
				  cancelButtonColor: '#6c757d'
			  }).then((result) => {
				  if (result.isConfirmed) {
					  window.location.href = '/login';
				  }
			  });
		  }
  
		  try {
			  const productId = this.dataset.productId;
			  const response = await fetch(`/product/${productId}`);
			  if (!response.ok) throw new Error('Failed to fetch product details');
			  
			  const product = await response.json();
			  await updateModalContent(product, product.variants[0]);
			  $('#addToCartModal').modal('show');
		  } catch (error) {
			  console.error('Error:', error);
			  Swal.fire({
				  title: 'Error',
				  text: 'Failed to load product details',
				  icon: 'error',
				  confirmButtonColor: '#384aeb'
			  });
		  }
	  });
  });
  
	  // Confirm add to cart
	  document.getElementById('confirmAddToCart').addEventListener('click', async function() {
	  try {
		  // Check authentication again before adding to cart
		  const authResponse = await fetch('/check-auth');
		  if (!authResponse.ok) {
			  $('#addToCartModal').modal('hide');
			  return Swal.fire({
				  title: 'Please Login',
				  text: 'You need to login to add items to cart',
				  icon: 'info',
				  showCancelButton: true,
				  confirmButtonText: 'Go to Login',
				  cancelButtonText: 'Close',
				  confirmButtonColor: '#384aeb',
				  cancelButtonColor: '#6c757d'
			  }).then((result) => {
				  if (result.isConfirmed) {
					  window.location.href = '/login';
				  }
			  });
		  }
  
		  if (!selectedSize) {
			  document.getElementById('sizeError').style.display = 'block';
			  return;
		  }
  
		  const response = await fetch(`/addToCart/${currentProductDetails._id}`, {
			  method: 'POST',
			  headers: { 'Content-Type': 'application/json' },
			  body: JSON.stringify({
				  size: selectedSize,
				  color: currentProductDetails.variants[0].color,
				  quantity: 1,
				  variantId: currentProductDetails.variants[0]._id
			  })
		  });
  
		  const data = await response.json();
		  
		  if (response.ok) {
			  $('#addToCartModal').modal('hide');
			  Swal.fire({
				  title: 'Success!',
				  text: 'Product added to cart successfully',
				  icon: 'success',
				  showCancelButton: true,
				  confirmButtonText: 'Go to Cart',
				  cancelButtonText: 'Continue Shopping',
				  confirmButtonColor: '#384aeb',
				  cancelButtonColor: '#6c757d'
			  }).then((result) => {
				  if (result.isConfirmed) {
					  window.location.href = '/userCart';
				  }
			  });
		  } else {
			  Swal.fire('Error', data.message || 'Failed to add item to cart', 'error');
		  }
	  } catch (error) {
		  console.error('Add to cart error:', error);
		  Swal.fire('Error', 'Failed to add item to cart', 'error');
	  }
  });
  
	  // Add wishlist event listeners
	  document.querySelectorAll('.add-to-wishlist').forEach(button => {
    button.addEventListener('click', async (e) => {
      e.preventDefault();
      const isAuthenticated = await checkAuth();
      if (!isAuthenticated) {
        return showLoginPrompt('manage wishlist');
      }
      await handleWishlistToggle(button);
    });
  });
  
	  // Initialize wishlist states
	  initializeWishlistButtons();
	  
  });
	</script>




<script>
	// Add this to your existing script section
document.addEventListener('DOMContentLoaded', function() {
    // Enhanced timer function
    function getTimeRemaining(endtime) {
        const total = Date.parse(endtime) - Date.parse(new Date());
        const seconds = Math.floor((total / 1000) % 60);
        const minutes = Math.floor((total / 1000 / 60) % 60);
        const hours = Math.floor((total / (1000 * 60 * 60)) % 24);
        const days = Math.floor(total / (1000 * 60 * 60 * 24));

        return {
            total,
            days,
            hours,
            minutes,
            seconds
        };
    }

    function initializeClock(clockId) {
        const clock = document.getElementById(clockId);
        if (!clock) return;

        const deadline = new Date(clock.dataset.expires);
        const daysSpan = clock.querySelector('.days');
        const hoursSpan = clock.querySelector('.hours');
        const minutesSpan = clock.querySelector('.minutes');
        const secondsSpan = clock.querySelector('.seconds');

        function updateClock() {
            const t = getTimeRemaining(deadline);

            if (t.total <= 0) {
                clearInterval(timeinterval);
                window.location.reload();
                return;
            }

            daysSpan.innerHTML = t.days;
            hoursSpan.innerHTML = ('0' + t.hours).slice(-2);
            minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
            secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);
        }

        updateClock();
        const timeinterval = setInterval(updateClock, 1000);
    }

    // Initialize clock for exclusive deals
    const offerClock = document.getElementById('offerClockdiv');
    if (offerClock) {
        initializeClock('offerClockdiv');
    }

    // Enhance add to cart handler for unlisted products
    document.querySelectorAll('.add-to-cart').forEach(button => {
        button.addEventListener('click', async function(e) {
            e.preventDefault();
            
            try {
                const productId = this.dataset.productId;
                const response = await fetch(`/product/${productId}`);
                const product = await response.json();

                if (!response.ok || product.isBlocked || !product.variants.some(v => v.isListed)) {
                    return Swal.fire({
                        title: 'Product Unavailable',
                        text: 'This product is currently unavailable or has been removed by the admin',
                        icon: 'error',
                        confirmButtonColor: '#384aeb'
                    });
                }

                // Rest of your existing add to cart logic
                await updateModalContent(product, product.variants[0]);
                $('#addToCartModal').modal('show');
            } catch (error) {
                console.error('Error:', error);
               
            }
        });
    });
});
	</script>


